name: comment-pr

on:
  workflow_run:
    workflows: ["sv-tests-ci"]
    types:
      - completed

jobs:
  Comment:
    name: Comment
    runs-on: ubuntu-18.04
    if: ${{ github.event.workflow_run.event == 'pull_request' && github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: 'Download artifact'
        id: get-artifacts
        uses: actions/github-script@v3.1.0
        with:
          script: |
            var artifacts = await github.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: ${{github.event.workflow_run.id }},
            });
            var matchArtifact = artifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "tests_summary"
            })[0];
            var download = await github.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            var artifact_link = "https://github.com/chipsalliance/sv-tests/suites/";
            artifact_link += "${{ github.event.worflow_run.id }}";
            artifact_link += "/artifacts/${{ steps.get-artifacts.outputs.artifact_id}})";

            console.log("::set-output name=artifact_link::" + artifact_link);
            var fs = require('fs');
            fs.writeFileSync('${{github.workspace}}/tests_summary.zip', Buffer.from(download.data));

      - run: |
          unzip tests_summary.zip
          cat ./tests_summary.md

      - name: XXX temporary test
        run:
          echo ${{ steps.get-artifacts.outputs.artifact_link}}
      - id: get-comment-body
        run: |
          body=$(cat ./tests_summary.md)
          body="${body//'%'/'%25'}"
          body="${body//$'\n'/'%0A'}"
          body="${body//$'\r'/'%0D'}"
          echo ::set-output name=body::$body

      - id: get-pr-number
        run: |
          num=$(cat ./issue_num)
          echo ::set-output name=num::$num

      - name: Post comment
        uses: KeisukeYamashita/create-comment@v1
        with:
          number: ${{ steps.get-pr-number.outputs.num }}
          check-only-first-line: "true"
          unique: "true"
          token: ${{ secrets.GITHUB_TOKEN }}
          comment: ${{ steps.get-comment-body.outputs.body }}
