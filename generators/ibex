#!/usr/bin/env python3

import os
import sys
import yaml
import subprocess

templ = """/*
:name: ibex
:description: Full ibex core test
:files: {0}
:incdirs: {1}
:top_module: ibex_core
:tags: ibex
:timeout: 100
*/
"""

try:
    third_party_dir = os.environ['THIRD_PARTY_DIR']
    tests_dir = os.environ['TESTS_DIR']
    conf_dir = os.environ['CONF_DIR']
except KeyError:
    print("Export the THIRD_PARTY_DIR, TESTS_DIR and CONF_DIR variables first")
    sys.exit(1)

try:
    tests_subdir = sys.argv[1]
except IndexError:
    print("Usage: ./generator <subdir>")
    sys.exit(1)

ibex_path = os.path.abspath(os.path.join(third_party_dir, "cores", "ibex"))

sources = ''
incdirs = ''
incs = []

groups = ['ibex', 'ibex_regfile_fpga']

subprocess.call(
    [
        "fusesoc", "--cores-root", ibex_path, "run", "--target=synth",
        "lowrisc:ibex:top_artya7"
    ],
    stdout=subprocess.DEVNULL,
    stderr=subprocess.DEVNULL)

ibex_conf_path = os.path.abspath(
    os.path.join("build", "lowrisc_ibex_top_artya7_0.1", "synth-vivado"))

with open(os.path.join(ibex_conf_path, 'core-deps.mk'), "r") as f:
    for line in f:
        line = line.strip()
        line = line.rstrip(" \\")
        if line.endswith('.sv'):
            incs.append(os.path.dirname(os.path.join(ibex_conf_path, line)))
            sources += os.path.join(ibex_conf_path, line) + ' '

incs = list(dict.fromkeys(incs))
for line in incs:
    incdirs += line + ' '

test_dir = os.path.join(tests_dir, 'generated', tests_subdir)

if not os.path.isdir(test_dir):
    os.makedirs(test_dir, exist_ok=True)

test_file = os.path.join(test_dir, "ibex.sv")

with open(test_file, "w") as f:
    f.write(templ.format(sources, incdirs))
