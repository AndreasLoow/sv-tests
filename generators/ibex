#!/usr/bin/env python3

import os
import sys
import yaml

templ = """/*
:name: ibex
:description: Full ibex core test
:files: {0}
:incdirs: {1}
:should_fail: 0
:tags: ibex
*/
"""

try:
    third_party_dir = os.environ['THIRD_PARTY_DIR']
    tests_dir = os.environ['TESTS_DIR']
    conf_dir = os.environ['CONF_DIR']
except KeyError:
    print("Export the THIRD_PARTY_DIR, TESTS_DIR and CONF_DIR variables first")
    sys.exit(1)

try:
    tests_subdir = sys.argv[1]
except IndexError:
    print("Usage: ./generator <subdir>")
    sys.exit(1)

ibex_path = os.path.abspath(os.path.join(third_party_dir, "cores", "ibex"))
ibex_yaml = os.path.join(ibex_path, "src_files.yml")

sources = ''
incdirs = ''

groups = ['ibex', 'ibex_regfile_fpga']

sources += os.path.join(
    ibex_path, 'examples/sim/rtl/prim_clock_gating.sv') + ' '

with open(ibex_yaml, "r") as f:
    y = yaml.safe_load(f)
    files = []
    includes = []
    try:
        for group in groups:
            files.extend(y[group]['files'])
            includes.extend(y[group]['incdirs'])
    except KeyError as e:
        print(str(e))
        sys.exit(1)

    for sv in files:
        sources += os.path.join(ibex_path, sv) + ' '
    for inc in includes:
        incdirs += os.path.join(ibex_path, inc) + ' '

test_dir = os.path.join(tests_dir, 'generated', tests_subdir)

if not os.path.isdir(test_dir):
    os.makedirs(test_dir, exist_ok=True)

test_file = os.path.join(test_dir, "ibex.sv")

with open(test_file, "w") as f:
    f.write(templ.format(sources, incdirs))
