#!/usr/bin/env python3

import os
import sys

templ = """/*
:name: {0}
:description: encapsulation test
:should_fail: {1}
:tags: 8.18
*/
module top();

class a_cls;
    local int a_loc = 21;
    protected int a_prot = 22;
    int a = 23;
endclass

class b_cls extends a_cls;
    local int b_loc = 31;
    protected int b_prot = 32;
    int b = 33;
    function void fun();
        $display({2});
    endfunction
endclass

b_cls b_obj;

initial begin
    b_obj = new;
    $display(b_obj.{3});
    b_obj.fun();
end

endmodule
"""

cases = [
    ('inherited_local_from_outside', '1', 'b', 'a_loc'),
    ('local_from_outside', '1', 'b', 'b_loc'),
    ('inherited_prot_from_outside', '1', 'b', 'a_prot'),
    ('prot_from_outside', '1', 'b', 'b_prot'),
    ('inherited_local_from_inside', '1', 'a_loc', 'b'),
    ('local_from_inside', '0', 'b_loc', 'b'),
    ('inherited_prot_from_inside', '0', 'a_prot', 'b'),
    ('prot_from_inside', '0', 'b_prot', 'b'),
]

try:
    tests_dir = os.environ['TESTS_DIR']
    conf_dir = os.environ['CONF_DIR']
except KeyError:
    print("Export the TESTS_DIR and CONF_DIR variables first")
    sys.exit(1)

try:
    tests_subdir = sys.argv[1]
except IndexError:
    print("Usage: ./generator <subdir>")
    sys.exit(1)

for case in cases:
    test_file = os.path.join(tests_dir,
                             "generated",
                             tests_subdir,
                             "8.18--{0}.sv".format(*case))
    with open(test_file, "w") as wf:
        wf.write(templ.format(*case))
