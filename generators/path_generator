#!/usr/bin/env python3

import os
import sys
import json
import glob

templ = """/*
:name: {3}
:description: Tests imported from {0}
:files: {2}
:should_fail: {1}
:tags: {0}
*/
"""

try:
    third_party_dir = os.environ['THIRD_PARTY_DIR']
    tests_dir = os.environ['TESTS_DIR']
    conf_dir = os.environ['CONF_DIR']
except KeyError:
    print("Export the TESTS_DIR and CONF_DIR variables first")
    sys.exit(1)

name = ''
project = ''
should_fail = ''
paths = [[]]
matches = []

for cfg in glob.glob(os.path.join(conf_dir, 'generators',
                                  'meta-path', '*.json')):
    with open(cfg, 'r') as jf:
        data = json.load(jf)
        name = data['name']
        project = data['project']
        should_fail = data['should_fail']
        paths = data['paths']
        matches = data['matches']

    test_dir = os.path.join(tests_dir, 'generated', project)

    if not os.path.isdir(test_dir):
        os.makedirs(test_dir, exist_ok=True)

    for path in paths:
        for match in matches:
            for f in glob.glob(os.path.abspath(os.path.join(third_party_dir,
                                                            *path, match))):

                fname = name + '_' + os.path.basename(os.path.splitext(f)[0])
                test_file = os.path.join(test_dir, fname + '.sv')

                with open(test_file, "w") as sv:
                    sv.write(templ.format(project, should_fail,
                                          f, fname))
